package programming;

public class StackPushPop {
	
	  private int maxSize;      // Maximum size of the stack
	    private int top;          // Index of the top element in the stack
	    private int[] stackArray; // Array to store stack elements

	    public StackPushPop(int size) {
	        maxSize = size;
	        stackArray = new int[maxSize];
	        top = -1; // Initialize top to -1 when stack is empty
	    }
	    
		
		   public void push(int value) {
		        if (top < maxSize - 1) {
		            stackArray[++top] = value;
		            System.out.println("Pushed: " + value);
		        } else {
		            System.out.println("Stack is full. Cannot push: " + value);
		        }
		    }
		
		
	    public int pop() {
	        if (top >= 0) {
	            int poppedValue = stackArray[top--];
	            System.out.println("Popped: " + poppedValue);
	            return poppedValue;
	        } else {
	            System.out.println("Stack is empty. Cannot pop.");
	            return -1; // Indicate stack is empty
	        }
	    }
	
	
	

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		StackPushPop stack = new StackPushPop(5);
	        stack.push(10);
	        stack.push(20);
	        stack.push(30);

	        stack.pop();
	        stack.pop();
	        stack.pop();
	        stack.pop(); // Trying to pop from an empty stack
	    }

	
}
